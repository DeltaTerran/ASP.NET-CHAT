{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\RealTimeChat\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { WaitingRoom } from \"./components/WaitingRoom.jsx\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { Chat } from \"./components/Chat.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [connection, setConnection] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [chatRoom, setChatRoom] = useState([]);\n  const joinChat = async (userName, chatRoom) => {\n    var connection = new HubConnectionBuilder().withUrl(\"http://localhost:5022/chat\").withAutomaticReconnect().build();\n    connection.on(\"ReceiveMessage\", (userName, message) => {\n      setMessages(messages => [...messages, {\n        userName,\n        message\n      }]);\n    });\n    try {\n      await connection.start();\n      await connection.invoke(\"JoinChat\", {\n        userName,\n        chatRoom\n      });\n      setConnection(connection);\n      setChatRoom(chatRoom);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const sendMessage = async message => {\n    await connection.invoke(\"SendMessage\", message);\n  };\n  const closeChat = async () => {\n    await connection.stop();\n    setConnection(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center bg-gray-100\",\n    children: connection ? /*#__PURE__*/_jsxDEV(Chat, {\n      messages: messages,\n      sendMessage: sendMessage,\n      closeChat: closeChat,\n      chatRoom: chatRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(WaitingRoom, {\n      joinChat: joinChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"JQbdX+dH9P9nzq4I7fSADu9IbWg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","WaitingRoom","HubConnectionBuilder","Chat","jsxDEV","_jsxDEV","App","_s","connection","setConnection","messages","setMessages","chatRoom","setChatRoom","joinChat","userName","withUrl","withAutomaticReconnect","build","on","message","start","invoke","error","console","log","sendMessage","closeChat","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projects/RealTimeChat/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { WaitingRoom } from \"./components/WaitingRoom.jsx\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { Chat } from \"./components/Chat.jsx\";\n\nconst App = () => {\n\tconst [connection, setConnection] = useState(null);\n\tconst [messages, setMessages] = useState([]);\n\tconst [chatRoom, setChatRoom] = useState([]);\n\n\tconst joinChat = async (userName, chatRoom) => {\n\t\tvar connection = new HubConnectionBuilder()\n\t\t\t.withUrl(\"http://localhost:5022/chat\")\n\t\t\t.withAutomaticReconnect()\n\t\t\t.build();\n\n\t\tconnection.on(\"ReceiveMessage\", (userName, message) => {\n\t\t\tsetMessages((messages) => [...messages, { userName, message }]);\n\t\t});\n\n\t\ttry {\n\t\t\tawait connection.start();\n\t\t\tawait connection.invoke(\"JoinChat\", { userName, chatRoom });\n\n\t\t\tsetConnection(connection);\n\t\t\tsetChatRoom(chatRoom);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst sendMessage = async (message) => {\n\t\tawait connection.invoke(\"SendMessage\", message);\n\t};\n\n\tconst closeChat = async () => {\n\t\tawait connection.stop();\n\t\tsetConnection(null);\n\t};\n\n\treturn (\n\t\t<div className=\"flex items-center justify-center bg-gray-100\">\n\t\t\t{connection ? (\n\t\t\t\t<Chat\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tsendMessage={sendMessage}\n\t\t\t\t\tcloseChat={closeChat}\n\t\t\t\t\tchatRoom={chatRoom}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<WaitingRoom joinChat={joinChat} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,oBAAoB,QAAQ,oBAAoB;AACzD,SAASC,IAAI,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEH,QAAQ,KAAK;IAC9C,IAAIJ,UAAU,GAAG,IAAIN,oBAAoB,CAAC,CAAC,CACzCc,OAAO,CAAC,4BAA4B,CAAC,CACrCC,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;IAETV,UAAU,CAACW,EAAE,CAAC,gBAAgB,EAAE,CAACJ,QAAQ,EAAEK,OAAO,KAAK;MACtDT,WAAW,CAAED,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE;QAAEK,QAAQ;QAAEK;MAAQ,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC;IAEF,IAAI;MACH,MAAMZ,UAAU,CAACa,KAAK,CAAC,CAAC;MACxB,MAAMb,UAAU,CAACc,MAAM,CAAC,UAAU,EAAE;QAAEP,QAAQ;QAAEH;MAAS,CAAC,CAAC;MAE3DH,aAAa,CAACD,UAAU,CAAC;MACzBK,WAAW,CAACD,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACnB;EACD,CAAC;EAED,MAAMG,WAAW,GAAG,MAAON,OAAO,IAAK;IACtC,MAAMZ,UAAU,CAACc,MAAM,CAAC,aAAa,EAAEF,OAAO,CAAC;EAChD,CAAC;EAED,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMnB,UAAU,CAACoB,IAAI,CAAC,CAAC;IACvBnB,aAAa,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACCJ,OAAA;IAAKwB,SAAS,EAAC,8CAA8C;IAAAC,QAAA,EAC3DtB,UAAU,gBACVH,OAAA,CAACF,IAAI;MACJO,QAAQ,EAAEA,QAAS;MACnBgB,WAAW,EAAEA,WAAY;MACzBC,SAAS,EAAEA,SAAU;MACrBf,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,gBAEF7B,OAAA,CAACJ,WAAW;MAACa,QAAQ,EAAEA;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAClC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER,CAAC;AAAC3B,EAAA,CAjDID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAmDT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}